{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","setMovie","_useState5","_useState6","error","setError","_useState7","_useState8","isLoading","setIsLoading","_Fragment","htmlFor","value","type","id","placeholder","cn","onFocus","onChange","event","target","onClick","query","preventDefault","fetch","concat","then","res","json","catch","Response","Error","data","Object","hasOwnProperty","call","movieData","foundMovie","Title","Plot","imdbID","Poster","finally","disabled","every","item","prevMovies","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.998dc92a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const findMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!inputValue) {\n      setError(true);\n\n      return;\n    }\n\n    setIsLoading(true);\n\n    getMovie(inputValue)\n      .then((data) => {\n        if (Object.hasOwnProperty.call(data, 'Error')) {\n          throw new Error('Movie not found');\n        }\n\n        const movieData = data as MovieData;\n\n        const foundMovie: Movie = {\n          title: movieData.Title,\n          description: movieData.Plot,\n          imdbId: movieData.imdbID,\n          imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n          imgUrl: movieData.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : movieData.Poster,\n        };\n\n        setMovie(foundMovie);\n      })\n      .catch(() => {\n        setError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const addMovieButtonHandler = () => {\n    if (movie) {\n      if (movies.every((item) => item.imdbId !== movie.imdbId)) {\n        setMovies((prevMovies) => [...prevMovies, movie]);\n      }\n\n      setMovie(null);\n      setInputValue('');\n    }\n  };\n\n  const inputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setError(false);\n    setInputValue(event.target.value);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={inputValue}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': error })}\n              onFocus={() => setError(false)}\n              onChange={inputChangeHandler}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', 'is-light', { 'is-loading': isLoading })}\n              onClick={findMovie}\n              disabled={inputValue === ''}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie !== null && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieButtonHandler}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie !== null && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ResponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a0525f2f';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}